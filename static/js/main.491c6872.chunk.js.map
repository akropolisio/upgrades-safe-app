{"version":3,"sources":["css/style.module.css","Result.ts","ethereum/Address.ts","ethereum/Eip1967.ts","ethereum/EthereumBridge.ts","ethereum/Contract.ts","AddressInput.tsx","SafeUpgrades.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ok","value","Ok","err","Err","match","_err","asNullable","this","isOk","f","_f","ResultAsync","fromPromise","Error","error","_ok","errAsync","res","_promise","map","then","a","isErr","mapErr","andThen","newValue","successCallback","promise","errorFn","newPromise","catch","e","process","warning","join","console","warn","Promise","resolve","Address","address","toLowerCase","length","parsedAddress","getAddress","uint256","hexZeroPad","toString","replace","IMPLEMENTATION_LABEL_HASH","hexlify","bigNumberify","id","sub","DEPRECATED_IMPLEMENTATION_LABEL_ID","ADMIN_LABEL_HASH","DEPRECATED_ADMIN_LABEL_ID","Eip1967","proxy","implementation","label","bridge","detectImplementationAddress","implementationAddress","isZeroAddress","detectAdminAddress","adminAddress","detectProxyAdmin","proxyAdmin","type","admin","proxyAdminAddress","maybeProxyAdmin","getContract","duckTypedProxyAdmin","getProxyImplementation","readImplementation","isEquivalent","getProxyAdmin","readProxyAdmin","owner","ownerAddress","fromUint256","getStorageAtNewOrDeprecatedSlot","newSlot","deprecatedSlot","getStorageAt","storage","AdminUpgradeabilityProxyABI","require","ProxyAdminABI","EthereumBridge","position","provider","abi","Contract","getCode","code","detect","proxyAddress","newImplementationAddress","undefined","to","data","encodeProxyTx","encodeProxyAdminTx","ethers","utils","Interface","functions","upgrade","encode","upgradeTo","prov","_providerInstance","REACT_APP_INFURA_KEY","providers","InfuraProvider","_network","getDefaultProvider","isManaged","contract","AddressInput","name","input","status","loading","isValid","isAddress","className","styles","blockie","seed","size","onClick","reset","delete","src","alt","title","onChange","setAddress","target","useAddressInput","validate","useState","setIsAddress","setValid","setError","setLoading","useEffect","addressResult","parse","validationResult","SafeUpgrades","safe","ethereum","setProxyAdminAddress","currentImplementationAddress","setCurrentImplementationAddress","proxyInput","hasBytecode","safeAddress","info","newImplementationInput","card","header","tx","buildUpgradeTransaction","sdk","sendTransactions","disabled","details","nobullet","success","description","href","rel","safeSdk","initSdk","App","safeInfo","setSafeInfo","addListeners","onSafeInfo","removeListeners","network","CircularProgress","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.491c6872.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"style_card__3L553\",\"header\":\"style_header__37Ks0\",\"input\":\"style_input__2rLzc\",\"blockie\":\"style_blockie__1T8HR\",\"address\":\"style_address__1ZH_o\",\"delete\":\"style_delete__-c3zE\",\"error\":\"style_error__116Hh\",\"success\":\"style_success__2qzxF\",\"loading\":\"style_loading__3BPy6\",\"spin\":\"style_spin__7EAJ-\",\"details\":\"style_details__3Iqpt\",\"nobullet\":\"style_nobullet__3a7NC\",\"note\":\"style_note__fO-Vm\",\"title\":\"style_title__3ih42\",\"description\":\"style_description__300QE\"};","// MIT License\n\n// Copyright (c) 2019 Giorgio Delgado\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n/* eslint @typescript-eslint/no-use-before-define: 0 */\nexport type Result<T, E> = Ok<T, E> | Err<T, E>;\n\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexport const ok = <T, E>(value: T): Ok<T, E> => new Ok(value);\n\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexport const err = <T, E>(err: E): Err<T, E> => new Err(err);\n\nexport class Ok<T, E> {\n  constructor(readonly value: T) {}\n\n  isOk(): this is Ok<T, E> {\n    return true;\n  }\n\n  isErr(): this is Err<T, E> {\n    return !this.isOk();\n  }\n\n  map<A>(f: (t: T) => A): Result<A, E> {\n    return ok(f(this.value));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  mapErr<U>(_f: (e: E) => U): Result<T, U> {\n    return ok(this.value);\n  }\n\n  // add info on how this is really useful for converting a\n  // Result<Result<T, E2>, E1>\n  // into a Result<T, E2>\n  andThen<U>(f: (t: T) => ResultAsync<U, E>): ResultAsync<U, E>;\n  andThen<U>(f: (t: T) => Result<U, E>): Result<U, E>;\n  andThen<U>(f: (t: T) => Result<U, E> | ResultAsync<U, E>): Result<U, E> | ResultAsync<U, E> {\n    return f(this.value);\n  }\n\n  asyncMap<U>(f: (t: T) => Promise<U>): ResultAsync<U, E> {\n    return ResultAsync.fromPromise(f(this.value));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  match = <A>(ok: (t: T) => A, _err: (e: E) => A): A => {\n    return ok(this.value);\n  };\n\n  asNullable = (): T | null => {\n    return this.value;\n  };\n\n  _unsafeUnwrap(): T {\n    return this.value;\n  }\n\n  _unsafeUnwrapErr(): E {\n    throw new Error('Called `_unsafeUnwrapErr` on an Ok');\n  }\n}\n\nexport class Err<T, E> {\n  constructor(readonly error: E) {}\n\n  isOk(): this is Ok<T, E> {\n    return false;\n  }\n\n  isErr(): this is Err<T, E> {\n    return !this.isOk();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  map<A>(_f: (t: T) => A): Result<A, E> {\n    return err(this.error);\n  }\n\n  mapErr<U>(f: (e: E) => U): Result<T, U> {\n    return err(f(this.error));\n  }\n\n  andThen<U>(_f: (t: T) => Result<U, E>): Result<U, E>;\n  // Since _f is ignored for Err, the return type is always a Result\n  andThen<U>(_f: (t: T) => ResultAsync<U, E>): Result<U, E>;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  andThen<U>(_f: (t: T) => Result<U, E> | ResultAsync<U, E>): Result<U, E> {\n    return err(this.error);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  asyncMap<U>(_f: (t: T) => Promise<U>): ResultAsync<U, E> {\n    return errAsync<U, E>(this.error);\n  }\n\n  match = <A>(_ok: (t: T) => A, err: (e: E) => A): A => {\n    return err(this.error);\n  };\n\n  asNullable = (): T | null => {\n    return null;\n  };\n\n  _unsafeUnwrap(): T {\n    throw new Error('Called `_unsafeUnwrap` on an Err');\n  }\n\n  _unsafeUnwrapErr(): E {\n    return this.error;\n  }\n}\n\nexport class ResultAsync<T, E> {\n  private _promise: Promise<Result<T, E>>;\n\n  constructor(res: Promise<Result<T, E>>) {\n    this._promise = res;\n  }\n\n  static fromPromise<T, E>(promise: Promise<T>, errorFn?: (e: unknown) => E): ResultAsync<T, E> {\n    let newPromise: Promise<Result<T, E>> = promise.then((value: T) => new Ok(value));\n    if (errorFn) {\n      newPromise = newPromise.catch((e) => new Err<T, E>(errorFn(e)));\n\n      if (typeof process !== 'object' || (process.env.NODE_ENV !== 'test' && process.env.NODE_ENV !== 'production')) {\n        const yellowColor = '\\x1b[33m%s\\x1b[0m';\n\n        const warning = [\n          '[neverthrow]',\n          '`fromPromise` called without a promise rejection handler',\n          'Ensure that you are catching promise rejections yourself, or pass a second argument to `fromPromsie` to convert a caught exception into an `Err` instance',\n        ].join(' - ');\n\n        console.warn(yellowColor, warning);\n      }\n    }\n    return new ResultAsync(newPromise);\n  }\n\n  map = <A>(f: (t: T) => A | Promise<A>) =>\n    new ResultAsync(\n      this._promise.then(async (res: Result<T, E>) => {\n        if (res.isErr()) {\n          return new Err<A, E>(res.error);\n        }\n\n        return new Ok<A, E>(await f(res.value));\n      }),\n    );\n\n  mapErr = <U>(f: (e: E) => U | Promise<U>) =>\n    new ResultAsync(\n      this._promise.then(async (res: Result<T, E>) => {\n        if (res.isOk()) {\n          return new Ok<T, U>(res.value);\n        }\n\n        return new Err<T, U>(await f(res.error));\n      }),\n    );\n\n  andThen = <U>(f: (t: T) => Result<U, E> | ResultAsync<U, E>) =>\n    new ResultAsync(\n      this._promise.then((res) => {\n        if (res.isErr()) {\n          return new Err<U, E>(res.error);\n        }\n\n        const newValue = f(res.value);\n\n        return newValue instanceof ResultAsync ? newValue._promise : newValue;\n      }),\n    );\n\n  match = <A>(ok: (t: T) => A, _err: (e: E) => A) => this._promise.then((res) => res.match(ok, _err));\n\n  // Makes ResultAsync awaitable\n  then = <A>(successCallback: (res: Result<T, E>) => A) => this._promise.then(successCallback);\n}\n\nexport const okAsync = <T, E>(value: T): ResultAsync<T, E> => new ResultAsync(Promise.resolve(new Ok<T, E>(value)));\n\nexport const errAsync = <T, E>(err: E): ResultAsync<T, E> => new ResultAsync(Promise.resolve(new Err<T, E>(err)));","import { Result, ok, err } from '../Result'\nimport { hexZeroPad, getAddress } from 'ethers/utils'\n\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nexport default class Address {\n  private address: string\n\n  /**\n   *\n   * @param address must be a valid address. Use `parse` factory method instead if you're unsure of this.\n   */\n  private constructor(address: string) {\n    this.address = address\n  }\n\n  public static parse(address: string): Result<Address, string> {\n    if (address.length === 0) {\n      return err('Contract or address expected')\n    }\n\n    try {\n      const parsedAddress = getAddress(address)\n      return ok(new Address(parsedAddress))\n    } catch {\n      return err('Contract or address expected')\n    }\n  }\n\n  public static fromUint256(uint256: string): Address {\n    const padded = hexZeroPad(uint256.toString(), 32)\n    const address = padded.replace('0x000000000000000000000000', '0x')\n    return new Address(getAddress(address))\n  }\n\n  /***\n   * When you know it's a valid address and don't want to deal\n   * with potential malformed stuff... (for example, in tests)\n   */\n  public static unsafeCreate(address: string): Address {\n    return new Address(address)\n  }\n\n  public toString(): string {\n    return this.address\n  }\n\n  public isZeroAddress(): boolean {\n    return !this.address || this.address === ZERO_ADDRESS\n  }\n\n  public isEquivalent(address: string): boolean {\n    return this.address.toLowerCase() === address.toLowerCase()\n  }\n}","import { hexlify, bigNumberify, id } from 'ethers/utils'\nimport Address from './Address'\nimport EthereumBridge from './EthereumBridge'\nimport duckTypedProxyAdmin from './abis/DuckTypedProxyAdmin.json'\nimport { Contract, ManagedContract, ProxyAdmin } from './Contract'\n\n// Implementation storage\nconst IMPLEMENTATION_LABEL = 'eip1967.proxy.implementation'\nconst DEPRECATED_IMPLEMENTATION_LABEL = 'org.zeppelinos.proxy.implementation'\nconst IMPLEMENTATION_LABEL_HASH = hexlify(bigNumberify(id(IMPLEMENTATION_LABEL)).sub(1))\nconst DEPRECATED_IMPLEMENTATION_LABEL_ID = id(DEPRECATED_IMPLEMENTATION_LABEL)\n\n// ProxyAdmin storage\nconst ADMIN_LABEL = 'eip1967.proxy.admin'\nconst DEPRECATED_ADMIN_LABEL = 'org.zeppelinos.proxy.admin'\nconst ADMIN_LABEL_HASH = hexlify(bigNumberify(id(ADMIN_LABEL)).sub(1))\nconst DEPRECATED_ADMIN_LABEL_ID = id(DEPRECATED_ADMIN_LABEL)\n\nexport class Eip1967 {\n  label: 'EIP 1967' = 'EIP 1967'\n  proxy: ManagedContract\n  implementation: Contract\n\n  constructor(proxy: ManagedContract, implementation: Contract) {\n    this.proxy = proxy\n    this.implementation = implementation\n  }\n\n  public static async detect(bridge: EthereumBridge, address: Address): Promise<Eip1967 | null> {\n    // Decode implementation address from slot\n    const implementationAddress = await this.detectImplementationAddress(bridge, address)\n    if (implementationAddress.isZeroAddress()) return null\n\n    // Decode admin address from slot\n    const adminAddress = await this.detectAdminAddress(bridge, address)\n    if (adminAddress.isZeroAddress()) return null\n\n    // Determine if address is a ProxyAdmin contract\n    const proxyAdmin = await this.detectProxyAdmin(bridge, address, adminAddress, implementationAddress)\n\n    return new Eip1967(\n      {\n        type: 'Proxy',\n        address: address,\n        admin: proxyAdmin || { type: 'Unknown', address: adminAddress },\n      },\n      {\n        type: 'Unknown',\n        address: implementationAddress,\n      },\n    )\n  }\n\n  private static async detectProxyAdmin(\n    bridge: EthereumBridge,\n    address: Address,\n    proxyAdminAddress: Address,\n    implementationAddress: Address,\n  ): Promise<ProxyAdmin | (ProxyAdmin & ManagedContract) | null> {\n    try {\n      const maybeProxyAdmin = bridge.getContract(proxyAdminAddress, duckTypedProxyAdmin)\n      const readImplementation = await maybeProxyAdmin.getProxyImplementation(address.toString())\n      if (!implementationAddress.isEquivalent(readImplementation)) return null\n\n      const readProxyAdmin = await maybeProxyAdmin.getProxyAdmin(address.toString())\n      if (!proxyAdminAddress.isEquivalent(readProxyAdmin)) return null\n\n      const owner = await maybeProxyAdmin.owner()\n      const ownerAddress = Address.fromUint256(owner)\n\n      if (ownerAddress.isZeroAddress()) {\n        return {\n          type: 'ProxyAdmin',\n          address: proxyAdminAddress,\n        };\n      } else {\n        return {\n          type: 'ProxyAdmin',\n          address: proxyAdminAddress,\n          admin: { type: 'Unknown', address: ownerAddress },\n        };\n      }\n    } catch {\n      return null\n    }\n  }\n\n\n  private static async detectAdminAddress(bridge: EthereumBridge, address: Address): Promise<Address> {\n    return await this.getStorageAtNewOrDeprecatedSlot(bridge, address, ADMIN_LABEL_HASH, DEPRECATED_ADMIN_LABEL_ID)\n  }\n\n  private static async detectImplementationAddress(bridge: EthereumBridge, address: Address): Promise<Address> {\n    return await this.getStorageAtNewOrDeprecatedSlot(\n      bridge,\n      address,\n      IMPLEMENTATION_LABEL_HASH,\n      DEPRECATED_IMPLEMENTATION_LABEL_ID,\n    )\n  }\n\n  private static async getStorageAtNewOrDeprecatedSlot(\n    bridge: EthereumBridge,\n    address: Address,\n    newSlot: string,\n    deprecatedSlot: string,\n  ): Promise<Address> {\n    let storage = await bridge.getStorageAt(address, newSlot)\n    if (storage === '0x0') {\n      storage = await bridge.getStorageAt(address, deprecatedSlot)\n    }\n    return Address.fromUint256(storage)\n  }\n}","import { ethers, Contract } from 'ethers'\nimport { Provider } from 'ethers/providers'\nimport { Eip1967 } from './Eip1967'\nimport { Transaction } from '../types'\nimport Address from './Address'\n\nconst AdminUpgradeabilityProxyABI = require('./abis/AdminUpgradeabilityProxy.json')\nconst ProxyAdminABI = require('./abis/ProxyAdmin.json')\n\n\nexport default class EthereumBridge {\n  private static _providerInstance: Provider\n  private static _network: string\n\n  public static set provider(prov: Provider) {\n    this._providerInstance = prov\n  }\n\n  public static set network(_network: string | undefined) {\n    this._network = _network || ''\n  }\n\n  public static get provider(): Provider {\n    const { REACT_APP_INFURA_KEY } = process.env\n\n    if (this._providerInstance === undefined) {\n      if (REACT_APP_INFURA_KEY) {\n        this._providerInstance = new ethers.providers.InfuraProvider(EthereumBridge._network, REACT_APP_INFURA_KEY)\n      } else {\n        this._providerInstance = ethers.getDefaultProvider()\n      }\n    }\n\n    return this._providerInstance\n  }\n\n  public async getStorageAt(address: Address, position: string): Promise<string> {\n    return EthereumBridge.provider.getStorageAt(address.toString(), position)\n  }\n\n  public getContract(address: Address, abi: Array<any>): Contract {\n    return new Contract(address.toString(), abi, EthereumBridge.provider)\n  }\n\n  public async getCode(address: Address) : Promise<string> {\n    return await EthereumBridge.provider.getCode(address.toString())\n  }\n\n  public async hasBytecode(address: Address) : Promise<boolean> {\n    const code = await this.getCode(address)\n    return code !== '0x'\n  }\n\n  public async detect(address: Address) : Promise<Eip1967 | null> {\n    return await Eip1967.detect(this, address)\n  }\n\n  public buildUpgradeTransaction(proxyAddress: string, newImplementationAddress: string, proxyAdminAddress: string | undefined) : Transaction {\n    if (proxyAdminAddress === undefined) {\n      return {\n        to: proxyAddress,\n        value: 0,\n        data: this.encodeProxyTx(newImplementationAddress)\n      }\n    } else {\n      return {\n        to: proxyAdminAddress,\n        value: 0,\n        data: this.encodeProxyAdminTx(proxyAddress, newImplementationAddress)\n      }\n    }\n  }\n\n  private encodeProxyAdminTx(proxyAddress: string, newImplementationAddress: string) : string {\n    const proxyAdminInterface = new ethers.utils.Interface(ProxyAdminABI)\n    return proxyAdminInterface.functions.upgrade.encode([ proxyAddress, newImplementationAddress ])\n  }\n\n  private encodeProxyTx(newImplementationAddress: string) : string {\n    const proxyInterface = new ethers.utils.Interface(AdminUpgradeabilityProxyABI)\n    return proxyInterface.functions.upgradeTo.encode([ newImplementationAddress ])\n  }\n}\n","import Address from './Address'\n\nexport type ContractType = 'Proxy' | 'ProxyAdmin' | 'Unknown'\n\nexport interface Contract {\n  address: Address\n  type: ContractType\n}\n\nexport interface ManagedContract extends Contract {\n  admin: Contract\n}\n\nexport interface ProxyAdmin extends Contract {\n  type: 'ProxyAdmin'\n}\n\nexport function isProxyAdmin(contract: Contract): contract is ProxyAdmin {\n  return contract.type === 'ProxyAdmin'\n}\n\nexport function isManaged(contract: Contract): contract is ManagedContract {\n  return 'admin' in contract\n}","import React, { useState, useEffect } from 'react'\nimport { AddressValidator, Input } from './types'\nimport Address from './ethereum/Address'\nimport Blockies from 'react-blockies'\nimport styles from './css/style.module.css'\n\ninterface Props {\n  name: string\n  label: string\n  input: Input\n}\n\nexport const AddressInput: React.FC<Props> = ({ name, label, input }) => {\n  // todo: As a nice-to-have, maybe we can add a small link to etherscan next to the text field, if the address is valid\n  const status = input.loading ? 'loading' : ( input.isValid ? 'success' : 'error' )\n\n  return <div>\n    <h5>{ label }</h5>\n    {\n      input.isAddress\n\n      ? <div>\n        <div className={styles.input}>\n          <div className={styles.address}>\n            <div className={styles.blockie}>\n              <Blockies\n                seed={ input.address.toLowerCase() }\n                className=\"blockie\"\n                size={ 6 }\n              />\n            </div>\n\n            <p>{ input.address }</p>\n\n            <button\n              onClick={ () => input.reset() }\n              className={styles.delete}>\n              <img src='ic_delete.svg' alt=\"reset input\"/>\n            </button>\n          </div>\n\n          <div className={styles[status]} title={input.error}></div>\n        </div>\n      </div>\n\n      : <input\n          id={ `${name}-address` }\n          name={ name }\n          className={styles.input}\n          type=\"text\"\n          value={ input.address }\n          onChange={ e => input.setAddress(e.target.value) }\n        />\n    }\n  </div>\n}\n\n\nexport const useAddressInput = (validate: AddressValidator) : Input => {\n  const [address, setAddress] = useState<string>('')\n  const [isAddress, setIsAddress] = useState<boolean>(false)\n  const [isValid, setValid] = useState<boolean | undefined>(undefined)\n  const [error, setError] = useState<string>('')\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const reset = () => {\n    setAddress('')\n    setIsAddress(false)\n    setValid(undefined)\n    setError('')\n  }\n\n  useEffect(() => {\n    (async () => {\n      if (! address) return\n      setLoading(true)\n\n      const addressResult = Address.parse(address)\n\n      if (addressResult.isErr()) {\n        setValid(false)\n        setError(addressResult.error)\n        setIsAddress(false)\n        setLoading(false)\n        return\n      }\n\n      setIsAddress(true)\n\n      const validationResult = await validate(addressResult.value)\n\n      if (validationResult.isErr()) {\n        setIsAddress(true)\n        setValid(false)\n        setError(validationResult.error)\n        setLoading(false)\n        return\n      }\n\n      setValid(true)\n      setError('')\n      setLoading(false)\n    })()\n  }, [address])\n\n  return { address, setAddress, isValid, isAddress, error, reset, loading }\n}\n","import React, { useState } from 'react'\n\nimport Address from './ethereum/Address'\nimport { ok, err } from './Result'\nimport { SafeUpgradesProps, Validation } from './types'\nimport { isProxyAdmin, isManaged } from './ethereum/Contract'\nimport { AddressInput, useAddressInput } from './AddressInput'\n\nimport styles from './css/style.module.css'\n\nconst SafeUpgrades: React.FC<SafeUpgradesProps> = ({ safe, ethereum }) => {\n  const [proxyAdminAddress, setProxyAdminAddress] = useState<string | undefined>()\n  const [currentImplementationAddress, setCurrentImplementationAddress] = useState<string | undefined>()\n\n\n  const proxyInput = useAddressInput(async (address: Address) : Promise<Validation> => {\n    setProxyAdminAddress(undefined)\n    setCurrentImplementationAddress(undefined)\n\n    const hasBytecode = await ethereum.hasBytecode(address)\n\n    if (! hasBytecode) {\n      return err('There is no contract in this address')\n    }\n\n    const Eip1967 = await ethereum.detect(address)\n\n    if (Eip1967 === null) {\n      return err('Only EIP1967-compatible proxies are supported')\n    }\n\n    const safeAddress = safe.info?.safeAddress || ''\n    const { proxy, implementation } = Eip1967\n    const { admin } = proxy\n\n    if (isProxyAdmin(admin)) {\n\n      if (isManaged(admin)) {\n        if ( ! admin.admin.address.isEquivalent(safeAddress)) {\n          return err(\"This proxy's admin is not managed by this Safe\")\n        }\n\n        setProxyAdminAddress(admin.address.toString())\n\n      } else {\n        return err(\"This proxy's admin is not managed by any address\")\n      }\n\n    } else if ( ! admin.address.isEquivalent(safeAddress)) {\n      return err('This proxy is not managed by this Safe')\n    }\n\n    setCurrentImplementationAddress(implementation.address.toString())\n    return ok(undefined)\n  })\n\n\n  const newImplementationInput = useAddressInput(async (address: Address) : Promise<Validation> => {\n    if (currentImplementationAddress && address.isEquivalent(currentImplementationAddress)) {\n      return err('Proxy already points to this implementation')\n    }\n\n    const hasBytecode = await ethereum.hasBytecode(address)\n\n    if (! hasBytecode) {\n      return err('There is no contract in this address')\n    }\n\n    const Eip1967 = await ethereum.detect(address)\n\n    if (Eip1967 !== null) {\n      return err(\"New implementation can't be a proxy contract\")\n    }\n\n    return ok(undefined)\n  })\n\n\n  const sendTransaction = () : void => {\n    const tx = ethereum.buildUpgradeTransaction(proxyInput.address, newImplementationInput.address, proxyAdminAddress)\n    safe.sdk.sendTransactions([tx])\n  }\n\n  return (\n    <div className={styles.card}>\n      <div className={styles.header}>\n\n        <h4>Upgrade a contract</h4>\n\n        <button\n          type=\"button\"\n          name=\"submit\"\n          onClick={ sendTransaction }\n          disabled={ ! (proxyInput.isValid && newImplementationInput.isValid) } >\n          Upgrade\n        </button>\n\n      </div>\n\n      <AddressInput\n        name='proxy'\n        label='Contract address'\n        input={ proxyInput }\n      />\n\n      <AddressInput\n        name='new-implementation'\n        label='New implementation address'\n        input={ newImplementationInput }\n      />\n\n      { proxyInput.isValid !== undefined || newImplementationInput.isValid === false\n\n        ? <div className={styles.details}>\n            <ul className={styles.nobullet}>\n\n              { proxyInput.isValid !== undefined\n                ? ( proxyInput.isValid\n                  ? <li className={styles.success}>\n                      <p className={styles.title}>This contract is EIP1967-compatible</p>\n                    </li>\n\n                  : <li className={styles.error}>\n                      <p className={styles.title}>Invalid contract address</p>\n                      <p id=\"proxy-input-error\" className={styles.description}>{ proxyInput.error }</p>\n                    </li>\n                  )\n                : <></>\n              }\n\n              { newImplementationInput.isValid === false\n                ? <li className={styles.error}>\n                    <p className={styles.title}>Invalid new implementation address</p>\n                    <p id=\"new-implementation-input-error\" className={styles.description}>{ newImplementationInput.error }</p>\n                  </li>\n                : <></>\n              }\n\n            </ul>\n          </div>\n        : <></>\n      }\n\n      <footer><a href=\"https://docs.openzeppelin.com/upgrades\" target=\"_blank\" rel=\"noopener noreferrer\">Powered by <img src=\"oz_icon.svg\" alt=\"OpenZeppelin\" /><b>OpenZeppelin</b> | Upgrades</a></footer>\n    </div>\n  )\n}\n\n\nexport default SafeUpgrades\n","import React, { useEffect, useState } from 'react'\nimport initSdk, { SafeInfo } from '@gnosis.pm/safe-apps-sdk'\nimport EthereumBridge from './ethereum/EthereumBridge'\n\nimport SafeUpgrades from './SafeUpgrades'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst ethereum = new EthereumBridge()\nconst safeSdk = initSdk()\n\nconst App: React.FC = () => {\n  const [safeInfo, setSafeInfo] = useState<SafeInfo>()\n  const safe = {\n    sdk: safeSdk,\n    info: safeInfo\n  }\n\n  useEffect(() => {\n    safe.sdk.addListeners({ onSafeInfo: setSafeInfo })\n    return () => safe.sdk.removeListeners()\n  }, [safe.sdk])\n\n  useEffect(() => {\n    const network = safe.info?.network\n    EthereumBridge.network = network === 'mainnet' ? 'homestead' : network\n  }, [safe.info])\n\n  return (\n    <div>\n      {( safe.info || process.env.NODE_ENV === 'development'\n        ? <SafeUpgrades safe={ safe } ethereum={ ethereum } />\n        : <>\n          Loading...<br />\n          <CircularProgress />\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import CircularProgress from '@material-ui/core/CircularProgress'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()"],"sourceRoot":""}